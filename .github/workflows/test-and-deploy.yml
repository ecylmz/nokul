name: test-and-deploy
on: [push, pull_request]

jobs:
  init:
    name: Initialize app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache vendor/bundle directory
        uses: actions/cache@v2
        env:
          cache-name: cache-bundle
        with:
          path: ${{ env.HOME }}/bundle
          key: ${{ runner.os }}-build-${{ env.cache-name }}-2-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-2-
      - name: Cache node_modules directory
        uses: actions/cache@v2
        env:
          cache-name: cache-node_modules
        with:
          path: ${{ env.HOME }}/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-2-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-2-
      - name: Cache bundle config directory
        uses: actions/cache@v2
        env:
          cache-name: cache-bundle-config
        with:
          path: ${{ env.HOME }}/.bundle_config
          key: ${{ runner.os }}-build-${{ env.cache-name }}-2
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-2
      - name: docker-compose commands
        run: |
          docker-compose build test
          docker-compose run test bin/plugdo bundle install -j4 --path /app/vendor/bundle --without development
          docker-compose run test yarn install
          docker-compose run test bin/rails db:create db:structure:load
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          TENANT_MASTER_KEY: ${{ secrets.TENANT_MASTER_KEY }}
          RAILS_ENV: test
          NODE_ENV: development

  static_analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache vendor/bundle directory
        uses: actions/cache@v2
        env:
          cache-name: cache-bundle
        with:
          path: ${{ env.HOME }}/bundle
          key: ${{ runner.os }}-build-${{ env.cache-name }}-2-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-2-
      - name: Cache node_modules directory
        uses: actions/cache@v2
        env:
          cache-name: cache-node_modules
        with:
          path: ${{ env.HOME }}/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-2-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-2-
      - name: Cache bundle config directory
        uses: actions/cache@v2
        env:
          cache-name: cache-bundle-config
        with:
          path: ${{ env.HOME }}/.bundle_config
          key: ${{ runner.os }}-build-${{ env.cache-name }}-2
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-2
      - name: test
        run: docker-compose run test bundle exec rake static_analysis:all
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          TENANT_MASTER_KEY: ${{ secrets.TENANT_MASTER_KEY }}
          RAILS_ENV: test
          NODE_ENV: development
  security-and-db:
    name: Security and db
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache vendor/bundle directory
        uses: actions/cache@v2
        env:
          cache-name: cache-bundle
        with:
          path: ${{ env.HOME }}/bundle
          key: ${{ runner.os }}-build-${{ env.cache-name }}-2-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-2-
      - name: Cache node_modules directory
        uses: actions/cache@v2
        env:
          cache-name: cache-node_modules
        with:
          path: ${{ env.HOME }}/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-2-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-2-
      - name: Cache bundle config directory
        uses: actions/cache@v2
        env:
          cache-name: cache-bundle-config
        with:
          path: ${{ env.HOME }}/.bundle_config
          key: ${{ runner.os }}-build-${{ env.cache-name }}-2
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-2
      - name: ls app
        run: |
          ls -al
          pwd
          echo $HOME
          ls -al $HOME/bundle
          ls -al $HOME/node_modules
          ls -al $HOME/.bundle_config
          ls -al .bundle
          ls -al /app/vendor/bundle
  integration:
    name: Integration tests
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [static_analysis, security-and-db, integration]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
