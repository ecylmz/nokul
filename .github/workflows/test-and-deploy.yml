name: test-and-deploy

on: [push, pull_request]

env:
  RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
  TENANT_MASTER_KEY: ${{ secrets.TENANT_MASTER_KEY }}
  RAILS_ENV: test
  NODE_ENV: development

jobs:

  build:
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: satackey/action-docker-layer-caching@v0.0

      - name: Build image
        run: docker-compose build test

  init:
    name: Initialize app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache vendor/bundle directory
        id: cache-bundle
        uses: actions/cache@v2
        env:
          cache-name: cache-bundle5
        with:
          path: /home/runner/bundle
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache node_modules directory
        uses: actions/cache@v2
        env:
          cache-name: cache-node_modules5
        with:
          path: /home/runner/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache bundle config directory
        uses: actions/cache@v2
        env:
          cache-name: cache-bundle-config5
        with:
          path: /home/runner/.bundle_config
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}

      - name: Create cache dir
        if: steps.cache-bundle.outputs.cache-hit != 'true'
        run: mkdir -p $HOME/bundle $HOME/.bundle_config $HOME/node_modules

      - uses: satackey/action-docker-layer-caching@v0.0

      - name: docker-compose commands
        run: |
          docker-compose run test bin/plugdo bundle install -j4 --path /app/vendor/bundle --without development
          docker-compose run test yarn install

  static_analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache vendor/bundle directory
        uses: actions/cache@v2
        env:
          cache-name: cache-bundle5
        with:
          path: /home/runner/bundle
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache node_modules directory
        uses: actions/cache@v2
        env:
          cache-name: cache-node_modules5
        with:
          path: /home/runner/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache bundle config directory
        uses: actions/cache@v2
        env:
          cache-name: cache-bundle-config5
        with:
          path: /home/runner/.bundle_config
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}

      - uses: satackey/action-docker-layer-caching@v0.0

      - name: test
        run: docker-compose run test bundle exec rake static_analysis:all
  
  security-and-db:
    name: Security and db
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache vendor/bundle directory
        uses: actions/cache@v2
        env:
          cache-name: cache-bundle5
        with:
          path: /home/runner/bundle
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache node_modules directory
        uses: actions/cache@v2
        env:
          cache-name: cache-node_modules5
        with:
          path: /home/runner/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache bundle config directory
        uses: actions/cache@v2
        env:
          cache-name: cache-bundle-config5
        with:
          path: /home/runner/.bundle_config
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}

      - uses: satackey/action-docker-layer-caching@v0.0

      - name: security and db test
        run: docker-compose run test bundle exec rake db:index

  integration:
    name: Integration tests
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache vendor/bundle directory
        uses: actions/cache@v2
        env:
          cache-name: cache-bundle5
        with:
          path: /home/runner/bundle
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache node_modules directory
        uses: actions/cache@v2
        env:
          cache-name: cache-node_modules5
        with:
          path: /home/runner/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache bundle config directory
        uses: actions/cache@v2
        env:
          cache-name: cache-bundle-config5
        with:
          path: /home/runner/.bundle_config
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}

      - uses: satackey/action-docker-layer-caching@v0.0

      - name: create test db
        run: docker-compose run test bin/rails db:create db:structure:load

      - name: integration test
        run: docker-compose run test bundle exec rails test:system test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [static_analysis, security-and-db, integration]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
